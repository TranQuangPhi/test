name: Unit Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests and capture results
        id: unit-test-results
        run: |
          yarn test --json --outputFile=test-results.json
          cat test-results.json

      - name: Post test results
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {repo, owner} = context.repo
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));
            const { number } = context.payload.pull_request;
          
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: `
              ## Test Results

              | Tests                | Passed | Failed | Total     |
              |----------------------|--------------------------------------|--------------------------------------|------------------------------------|
              | Files                |                                      |                                      | ${results.numTotalTestSuites}      |
              | TestSuites           | ${results.numPassedTestSuites} Passed| ${results.numFailedTestSuites} Failed| ${results.numTotalTestSuites}      |                               
              | Tests                | ${results.numPassedTests} Passed     | ${results.numFailedTests} Failed     | ${results.numTotalTests}           |
              | Snapshots            |                                      |                                      | ${results.snapshot.total}          |
              | Time                 |                                      |                                      | ${results.startTime}               |
                `,
            });

           