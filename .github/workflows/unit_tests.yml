name: Unit Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests and capture results
        id: unit-test-results
        run: |
          yarn test --json > test-results.json
          echo "::set-output name=results::$(cat test-results.json)"

      - name: Post test results
        uses: actions/github-script@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('test-results.json', 'utf8');
            const { owner, repo, number } = context.payload.pull_request;

            const { data: comments } = await github.pulls.listComments({
              owner,
              repo,
              pull_number: number,
            });

            const existingComment = comments.find(comment => comment.body.includes('Test Results:'));

            if (existingComment) {
              await github.pulls.updateReviewComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: 'Test Results:\n```\n' + results + '\n```',
              });
            } else {
              await github.pulls.createReviewComment({
                owner,
                repo,
                pull_number: number,
                body: 'Test Results:\n```\n' + results + '\n```',
              });
            }
      # - name: Post test results
      #   uses: actions/github-script@v4
      #   if: ${{ github.event_name == 'pull_request' }}
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const fs = require('fs');
      #       const results = fs.readFileSync('test-results.json', 'utf8');
      #       const { owner, repo, number } = context.payload.pull_request;

      #       await github.issues.createComment({
      #         owner,
      #         repo,
      #         issue_number: number,
      #         body: 'Test Results:\n```\n' + results + '\n```'
      #       });